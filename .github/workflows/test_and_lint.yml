name: Test and Lint

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    env:
      TZ: America/Chicago

    strategy:
      matrix:
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: "0.8.14"
          activate-environment: true
          enable-cache: true

      - name: Run lint checks
        run: uvx pre-commit run --all-files

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Get HA digest (linux/amd64) without pulling layers
        id: ha
        run: |
          set -euo pipefail
          # Query the manifest list and pick the amd64 digest
          DIGEST=$(docker buildx imagetools inspect --raw homeassistant/home-assistant:stable \
            | jq -r '.manifests[] | select(.platform.architecture=="amd64" and .platform.os=="linux") | .digest')
          echo "digest=$DIGEST" >> "$GITHUB_OUTPUT"

      - name: Restore cached HA image
        id: cache_ha
        uses: actions/cache@v4
        with:
          path: ha-image-amd64.tar
          key: ha-image-${{ steps.ha.outputs.digest }}

      # Load if cache hit
      - name: Load HA image from cache
        if: steps.cache_ha.outputs.cache-hit == 'true'
        run: docker load -i ha-image-amd64.tar

      # Pull & save only on cache miss
      - name: Pull & save HA image
        if: steps.cache_ha.outputs.cache-hit != 'true'
        run: |
          docker pull --platform=linux/amd64 homeassistant/home-assistant:stable
          docker save homeassistant/home-assistant:stable -o ha-image-amd64.tar

      - name: start test-homeassistant
        run: docker compose -f docker-compose.yml -f docker-compose.override.yml up test-homeassistant -d

      - run: uv sync

      - name: Wait for Home Assistant to be available
        run: |
          for i in {1..30}; do
          if curl -fsS http://127.0.0.1:8123 >/dev/null; then
              echo "Home Assistant is up! Sleeping 3s..."
              sleep 3
              exit 0
          fi
          echo "Waiting for Home Assistant to be available..."
          sleep 10
          done
          echo "::group::test-homeassistant logs"
          docker logs --tail=200 test-homeassistant || true
          echo "::endgroup::"
          exit 1

      - name: Run tests
        run: uv run pytest -vv --durations=10

      - name: stop test-homeassistant
        run: docker compose -f docker-compose.yml down test-homeassistant
        if: always()
